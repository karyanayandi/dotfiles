set $mod Mod4

output HDMI-A-1 mode 1920x1080@71.910Hz position 0,0

set $accent #c8ccd4
set $red #bf616a 
set $text #eceff4
set $shadow #eceff4
set $shadow_inactive #565c64
set $surface #545862
set $dark #353b45
set $base #282c34

gaps inner 16
gaps outer 2
smart_borders on

corner_radius 5
shadows enable
shadows_on_csd enable
shadow_blur_radius 3
shadow_color $shadow
shadow_inactive_color $shadow_inactive

default_border pixel

set $term foot
set $menu rofi

font SF Pro 11

# thin borders:
hide_edge_borders both

# Use Mouse+$mod to drag floating windows to their wanted position:
floating_modifier $mod

# start a terminal:
bindsym $mod+Return exec $term

# kill focused window:
bindsym $mod+c kill

# change focus:
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# change focus with arrow keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window:
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# move focused window with arrow keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation:
bindsym $mod+s split h

# split in vertical orientation:
bindsym $mod+v split v

# enter fullscreen mode for the focused container:
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split):
bindsym $mod+Shift+s layout stacking
bindsym $mod+Shift+t layout tabbed
bindsym $mod+Shift+x layout toggle split

# toggle tiling / floating:
bindsym $mod+Shift+f floating toggle

# change focus between tiling / floating windows:
bindsym $mod+i focus mode_toggle

# focus the parent container:
bindsym $mod+a focus parent

# Hide border
for_window [class="^.*"] border pixel 0

# Floating maximum size
floating_maximum_size -1 x -1

# Floating Windows
#TODO: window size not based on video resolution
for_window [app_id="mpv"] floating enable, resize set 1200 800, move position 75 50%
for_window [app_id="org.gnome.FileRoller"] floating enable, resize set 1200 800, move position 75 44%
for_window [class="Archive Manager"] floating enable
for_window [class="Pavucontrol" instance="pavucontrol"] floating enable
for_window [class="Rofi"] floating enable
for_window [class="Viewnior" instance="viewnior"] floating enable
for_window [class="Yad" instance="yad"] floating enable
for_window [class="confirm"] floating enable
for_window [class="confirmreset"] floating enable
for_window [class="dialog"] floating enable
for_window [class="download"] floating enable
for_window [class="error"] floating enable
for_window [class="feh"] floating enable
for_window [class="file_progress"] floating enable
for_window [class="notification"] floating enable
for_window [class="pavucontrol"] floating enable
for_window [class="pavucontrol-qt"] floating enable
for_window [class="screenshot" instance="screenshot"] floating enable
for_window [class="splash"] floating enable
for_window [class="viewnior"] floating enable
for_window [class="xdg-open" instance="xdg-open"] floating enable
for_window [title="Open File"] floating enable
for_window [title="branchdialog"] floating enable

# Fullscreen windows
for_window [class="wlogout"] fullscreen enable
for_window [title="wlogout"] fullscreen enable
for_window [class="wlogout" title="wlogout"] fullscreen enable

# Matching specific window titles
for_window [title="^(Media viewer)$"] floating enable
for_window [title="^(Volume Control)$"] floating enable
for_window [title="^(Picture-in-Picture)$"] floating enable
for_window [title="^(Extract)$"] floating enable
for_window [title="^(Save File)$"] floating enable
for_window [title="^(Open File)$"] floating enable

# Size and position adjustments
for_window [title="^(Save File)$"] floating enable, resize set 1200 800, move position 75 44%
for_window [title="^(Open File)$"] floating enable, resize set 1200 800, move position 75 44%
for_window [title="^(Volume Control)$"] floating enable, resize set 1200 800, move position 75 44%

# resize floating windows with mouse scroll:
bindsym --whole-window --border $mod+button4 resize shrink height 5 px or 5 ppt
bindsym --whole-window --border $mod+button5 resize grow height 5 px or 5 ppt
bindsym --whole-window --border $mod+shift+button4 resize shrink width 5 px or 5 ppt
bindsym --whole-window --border $mod+shift+button5 resize grow width 5 px or 5 ppt

#assign workspace to screens
#workspace 1 output HDMI-1
#workspace 2 output HDMI-1
#workspace 3 output HDMI-1
#workspace 4 output HDMI-1
#workspace 5 output HDMI-1
#workspace 6 output eDP-1
#workspace 7 output eDP-1
#workspace 8 output eDP-1
#workspace 9 output eDP-1
#workspace 10 output eDP-1

# switch to workspace:
bindsym $mod+1 workspace 1
bindsym $mod+2 workspace 2
bindsym $mod+3 workspace 3
bindsym $mod+4 workspace 4
bindsym $mod+5 workspace 5
bindsym $mod+6 workspace 6
bindsym $mod+7 workspace 7
bindsym $mod+8 workspace 8
bindsym $mod+9 workspace 9
bindsym $mod+0 workspace 10

# move focused container to workspace:
bindsym $mod+Shift+1 move container to workspace 1
bindsym $mod+Shift+2 move container to workspace 2
bindsym $mod+Shift+3 move container to workspace 3
bindsym $mod+Shift+4 move container to workspace 4
bindsym $mod+Shift+5 move container to workspace 5
bindsym $mod+Shift+6 move container to workspace 6
bindsym $mod+Shift+7 move container to workspace 7
bindsym $mod+Shift+8 move container to workspace 8
bindsym $mod+Shift+9 move container to workspace 9
bindsym $mod+Shift+0 move container to workspace 10

# switch to output
#bindsym $mod+shift+n focus output HDMI1
#bindsym $mod+shift+m focus output eDP1

# reload the configuration file:
bindsym $mod+Shift+r reload

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3):
bindsym $mod+BackSpace restart

# exit i3 (logs you out of your X session):
bindsym $mod+Shift+q exec ~/.local/bin/power-menu.sh
bindsym $mod+Shift+e exec loginctl terminate-user $USER

# resize window (you can also use the mouse for that):
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode
        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.

        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"

# Caplock indicator
bindsym --release Caps_Lock exec swayosd-client --caps-lock

# Multimedia Keys:

# Screen brightness controls
# bindsym XF86MonBrightnessUp exec --no-startup-id bash -c 'b=$(wlr-randr | grep -i brightness | head -n 1 | cut -d" " -f2); b2=$(python -c "import math; f = lambda x: (1 - 1/(1+math.exp(4*x-2))); print(f\"{f(0.1 + float($b)):.2f}\")"); wlr-randr --output HDMI-A-1 "$b2"'
# bindsym XF86MonBrightnessDown exec --no-startup-id bash -c 'b=$(wlr-randr | grep -i brightness | head -n 1 | cut -d" " -f2); b2=$(python -c "import math; f = lambda x: (1 - 1/(1+math.exp(4*x-2))); print(f\"{f(-0.1 + float($b)):.2f}\")"); wlr-randr --output HDMI-A-1 "$b2"'

# bindsym $mod+ctrl+u exec --no-startup-id bash -c 'b=$(wlr-randr | grep -i brightness | head -n 1 | cut -d" " -f2); b2=$(python -c "import math; f = lambda x: (1 - 1/(1+math.exp(4*x-2))); print(f\"{f(0.1 + float($b)):.2f}\")"); wlr-randr --output HDMI-A-1 "$b2"'
# bindsym $mod+ctrl+y exec --no-startup-id bash -c 'b=$(wlr-randr | grep -i brightness | head -n 1 | cut -d" " -f2); b2=$(python -c "import math; f = lambda x: (1 - 1/(1+math.exp(4*x-2))); print(f\"{f(-0.1 + float($b)):.2f}\")"); wlr-randr --output HDMI-A-1 "$b2"'

# volume
bindsym XF86AudioRaiseVolume exec --no-startup-id swayosd-client --output-volume raise
bindsym XF86AudioLowerVolume exec --no-startup-id swayosd-client --output-volume lower

# mute
bindsym XF86AudioMute exec --no-startup-id swayosd-client --output-volume mute-toggle 
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

# App shortcuts
bindsym $mod+b exec "/usr/bin/google-chrome-stable"
bindsym $mod+g exec "~/.local/bin/screen-record.sh"
bindsym $mod+Shift+g exec "~/.local/bin/stop-screen-record.sh"
#bindsym $mod+w exec "x-www-browser"
bindsym $mod+w exec "zen-browser"
bindsym $mod+e exec "/usr/bin/nemo"

# screenshot
#bindsym $mod+p exec --no-startup-id maim "/home/$USER/dir/data/Pictures/screenshot/$(date +%s).png"
bindsym Print exec grim - | wl-copy && notify-send "Screenshot copied to clipboard"
bindsym $mod+Print exec grim -g "$(slurp)" && notify-send "Screenshot copied to clipboard"
bindsym $mod+Shift+p exec grim $(xdg-user-dir PICTURES)/Screenshots/$(date +'%s_screenshot.png') && notify-send "Screenshot saved"

# Lock the system
bindsym $mod+u exec swaylock

# rofi bindings fancy application menu
bindsym $mod+space exec rofi -show drun
bindsym $mod+shift+space exec rofi -show run
                
bindsym F9 exec rofi -modi drun -show drun -line-padding 4 \
                -columns 2 -padding 50 -hide-scrollbar

bindsym $mod+o exec rofi -show window -line-padding 4 \
                -lines 6 -padding 50 -hide-scrollbar

bindsym F10 exec rofi -show window -line-padding 4 \
                -lines 6 -padding 50 -hide-scrollbar


# input * xkb_options "altwin:swap_alt_win"
input "type:touchpad" {
    dwt enabled
    tap enabled
    middle_emulation enabled
}

#  Notification                    
bindsym $mod+shift+backslash exec dunstctl set-paused toggle

# Autostart
exec eval $(gnome-keyring-daemon --start)
exec /usr/bin/dunst
exec /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
exec gnome-keyring-daemon --start
exec  export SSH_AUTH_SOCK
exec swayosd-server

#set wallpaper:
exec --no-startup-id swaybg -m fill -i ~/.config/dotfiles/wallpapers/schedule.png

#set sway cursor theme:
exec --no-startup-id swaymsg seat seat0 xcursor_theme Bibata-Modern-Ice

# set gnome interface:
set $gnome-schema org.gnome.desktop.interface

exec_always {
    gsettings set org.cinnamon.desktop.default-applications.terminal exec foot
    gsettings set $gnome-schema gtk-theme 'Adwaita One Dark'
    gsettings set $gnome-schema icon-theme 'Tela black dark'
    gsettings set $gnome-schema cursor-theme 'Bibata-Modern-Ice'
    gsettings set $gnome-schema font-name 'SF Pro'
}

bar {
    position top

    status_command while date +'%Y-%m-%d %H:%M'; do sleep 1; done

     colors {
        background         $base
        statusline         $text
        focused_statusline $text
        focused_separator  $base

        # target           border bg        text
        focused_workspace  $base  $accent   $dark
        active_workspace   $base  $surface  $text
        inactive_workspace $base  $base     $text
        urgent_workspace   $base  $red      $dark
      }
}


