set $mod Mod4

set $rosewater #f5e0dc
set $flamingo #f2cdcd
set $pink #f5c2e7
set $mauve #cba6f7
set $red #f38ba8
set $maroon #eba0ac
set $peach #fab387
set $yellow #f9e2af
set $green #a6e3a1
set $teal #94e2d5
set $sky #89dceb
set $sapphire #74c7ec
set $blue #89b4fa
set $lavender #b4befe
set $text #cdd6f4
set $subtext1 #bac2de
set $subtext0 #a6adc8
set $overlay2 #9399b2
set $overlay1 #7f849c
set $overlay0 #6c7086
set $surface2 #585b70
set $surface1 #45475a
set $surface0 #313244
set $base #1e1e2e
set $mantle #181825
set $crust #11111b

for_window [class="^.*"] border pixel 0
gaps inner 16
gaps outer 2
smart_borders on
corner_radius 5
shadows enable
shadow_blur_radius 3
shadow_color $overlay1

default_border pixel

set $term foot
set $menu wmenu-run

font JetbrainsMono NF 11

# thin borders:
hide_edge_borders both

# Use Mouse+$mod to drag floating windows to their wanted position:
floating_modifier $mod

# start a terminal:
bindsym $mod+Return exec $term

# kill focused window:
bindsym $mod+c kill

# change focus:
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window:
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation:
bindsym $mod+s split h

# split in vertical orientation:
bindsym $mod+v split v

# enter fullscreen mode for the focused container:
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split):
bindsym $mod+Shift+s layout stacking
bindsym $mod+Shift+t layout tabbed
bindsym $mod+Shift+x layout toggle split

# toggle tiling / floating:
bindsym $mod+Shift+i floating toggle

# change focus between tiling / floating windows:
bindsym $mod+i focus mode_toggle

# focus the parent container:
bindsym $mod+a focus parent

# set floating (nontiling)for apps needing it:
for_window [class="Yad" instance="yad"] floating enable
for_window [class="Pavucontrol" instance="pavucontrol"] floating enable
for_window [class="screenshot" instance="screenshot"] floating enable
for_window [class="xdg-open" instance="xdg-open"] floating enable
for_window [class="Viewnior" instance="viewnior"] floating enable
for_window [class="mpv"] floating enable
for_window [class="Archive Manager"] floating enable

# resize floating windows with mouse scroll:
bindsym --whole-window --border $mod+button4 resize shrink height 5 px or 5 ppt
bindsym --whole-window --border $mod+button5 resize grow height 5 px or 5 ppt
bindsym --whole-window --border $mod+shift+button4 resize shrink width 5 px or 5 ppt
bindsym --whole-window --border $mod+shift+button5 resize grow width 5 px or 5 ppt

#assign workspace to screens
#workspace 1 output HDMI-1
#workspace 2 output HDMI-1
#workspace 3 output HDMI-1
#workspace 4 output HDMI-1
#workspace 5 output HDMI-1
#workspace 6 output eDP-1
#workspace 7 output eDP-1
#workspace 8 output eDP-1
#workspace 9 output eDP-1
#workspace 10 output eDP-1

# switch to workspace:
bindsym $mod+1 workspace 1
bindsym $mod+2 workspace 2
bindsym $mod+3 workspace 3
bindsym $mod+4 workspace 4
bindsym $mod+5 workspace 5
bindsym $mod+6 workspace 6
bindsym $mod+7 workspace 7
bindsym $mod+8 workspace 8
bindsym $mod+9 workspace 9
bindsym $mod+0 workspace 10

# move focused container to workspace:
bindsym $mod+Shift+1 move container to workspace 1
bindsym $mod+Shift+2 move container to workspace 2
bindsym $mod+Shift+3 move container to workspace 3
bindsym $mod+Shift+4 move container to workspace 4
bindsym $mod+Shift+5 move container to workspace 5
bindsym $mod+Shift+6 move container to workspace 6
bindsym $mod+Shift+7 move container to workspace 7
bindsym $mod+Shift+8 move container to workspace 8
bindsym $mod+Shift+9 move container to workspace 9
bindsym $mod+Shift+0 move container to workspace 10

# switch to output
#bindsym $mod+shift+n focus output HDMI1
#bindsym $mod+shift+m focus output eDP1

# reload the configuration file:
bindsym $mod+Shift+r reload

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3):
bindsym $mod+BackSpace restart

# exit i3 (logs you out of your X session):
bindsym $mod+Shift+q exec shutdown-menu
bindsym $mod+Shift+e exec loginctl terminate-user $USER

# resize window (you can also use the mouse for that):
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"

# Multimedia Keys:

# volume
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume 0 +5% 
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume 0 -5%  


# gradular volume control
bindsym $mod+XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume 0 +5%
bindsym $mod+XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume 0 -5%  

# mute
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute 0 toggle
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

# App shortcuts
bindsym $mod+b exec "/usr/bin/google-chrome-stable"
bindsym $mod+g exec "screen-record"
bindsym $mod+Shift+g exec "stop-screen-record"
#bindsym $mod+w exec "x-www-browser"
bindsym $mod+w exec "zen-browser"
bindsym $mod+e exec "/usr/bin/nemo"

# screenshot
#bindsym $mod+p exec --no-startup-id maim "/home/$USER/dir/data/Pictures/screenshot/$(date +%s).png"
bindsym Print exec grim - | wl-copy
bindsym $mod+Print exec grim -g "$(slurp)"
bindsym $mod+Shift+p exec grim $(xdg-user-dir PICTURES)/Screenshot/$(date +'%s_screenshot.png')

# Lock the system
bindsym $mod+u exec betterlockscreen -l dim

# rofi bindings fancy application menu
# bindsym $mod+space exec $menu
bindsym $mod+space exec rofi -show drun -config "~/.config/rofi/config.rasi"
bindsym $mod+shift+space exec rofi -show run -config "~/.config/rofi/config.rasi"
                
bindsym F9 exec rofi -modi drun -show drun -line-padding 4 \
                -columns 2 -padding 50 -hide-scrollbar

bindsym $mod+o exec rofi -show window -line-padding 4 \
                -lines 6 -padding 50 -hide-scrollbar

bindsym F10 exec rofi -show window -line-padding 4 \
                -lines 6 -padding 50 -hide-scrollbar

#bindsym F3 exec nmtui                

# Sreen brightness controls
bindsym XF86MonBrightnessUp exec --no-startup-id bash -c 'b=$(xrandr --verbose | grep -i brightness | head -n 1 | cut -d" " -f2) && b2=$(echo -e "import math\nf = lambda x: (1 - 1/(1+math.exp(4*x-2)))\nprint(\\\"%.2f\\\" % f(0.1+$b))" | python) && xrandr --output HDMI-0 --brightness $b2'
bindsym XF86MonBrightnessDown exec --no-startup-id bash -c 'b=$(xrandr --verbose | grep -i brightness | head -n 1 | cut -d" " -f2) && b2=$(echo -e "import math\nf = lambda x: (1 - 1/(1+math.exp(4*x-2)))\nprint(\\\"%.2f\\\" % f(-0.1+$b))" | python) && xrandr --output HDMI-0 --brightness $b2'

bindsym $mod+ctrl+u exec --no-startup-id bash -c 'b=$(xrandr --verbose | grep -i brightness | head -n 1 | cut -d" " -f2) && b2=$(echo -e "import math\nf = lambda x: (1 - 1/(1+math.exp(4*x-2)))\nprint(\\\"%.2f\\\" % f(0.1+$b))" | python) && xrandr --output HDMI-0 --brightness $b2'
bindsym $mod+ctrl+y exec --no-startup-id bash -c 'b=$(xrandr --verbose | grep -i brightness | head -n 1 | cut -d" " -f2) && b2=$(echo -e "import math\nf = lambda x: (1 - 1/(1+math.exp(4*x-2)))\nprint(\\\"%.2f\\\" % f(-0.1+$b))" | python) && xrandr --output HDMI-0 --brightness $b2'

#bindsym XF86MonBrightnessUp exec xbacklight -inc 5
#bindsym XF86MonBrightnessDown exec xbacklight -dec 5
#bindsym $mod+ctrl+u exec xbacklight -inc 5
#bindsym $mod+ctrl+y exec xbacklight -dec 5

input * xkb_options "altwin:swap_alt_win"
input "type:touchpad" {
    dwt enabled
    tap enabled
    middle_emulation enabled
}

#  Notification                    
bindsym $mod+shift+backslash exec dunstctl set-paused toggle

# dex execute .desktop files:
exec --no-startup-id dex -a -s /etc/xdg/autostart/:~/.config/autostart

#set compositor
# exec --no-startup-id picom -b 

#set wallpaper:
exec --no-startup-id swaybg -m center -i ~/.config/dotfiles/wallpapers/catppuccin/arch.png

#set powersavings for display:
exec --no-startup-id xset s 480 dpms 600 600 600

bar {
    position top

    status_command while date +'%Y-%m-%d %H:%M'; do sleep 1; done

     colors {
        background         $base
        statusline         $text
        focused_statusline $text
        focused_separator  $base

        # target           border bg        text
        focused_workspace  $base  $mauve    $crust
        active_workspace   $base  $surface2 $text
        inactive_workspace $base  $base     $text
        urgent_workspace   $base  $red      $crust
      }
}


